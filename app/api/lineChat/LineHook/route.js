export async function POST(req) {
  try {
    const body = await req.json();

    console.log("üì© Webhook body:", JSON.stringify(body, null, 2));

    if (!body.events || body.events.length === 0) {
      return new Response("No events", { status: 200 });
    }

    const LINE_ACCESS_TOKEN = process.env.LINE_ACCESS_TOKEN;

    for (const event of body.events) {
      // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
      const userId = event.source?.userId || "UnknownUser";
      const type = event.type;

      if (type === "message" && event.message.type === "text") {
        const userMessage = event.message.text;
        const replyToken = event.replyToken;

        // üîç Log ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Console (Vercel ‡∏à‡∏∞‡πÄ‡∏´‡πá‡∏ô‡πÉ‡∏ô Logs)
        console.log(`üë§ User ID: ${userId}`);
        console.log(`üí¨ Message: ${userMessage}`);

        // ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
        const replyMessage = {
          replyToken: replyToken,
          messages: [
            { type: "text", text: `‡∏Ñ‡∏∏‡∏ì (${userId}) ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ß‡πà‡∏≤: ${userMessage}` },
          ],
        };

        // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ LINE
        await fetch("https://api.line.me/v2/bot/message/reply", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${LINE_ACCESS_TOKEN}`,
          },
          body: JSON.stringify(replyMessage),
        });
      } else {
        console.log(`‚ö†Ô∏è Received unsupported event type: ${type}`);
      }
    }

    return new Response("OK", { status: 200 });
  } catch (err) {
    console.error("‚ùå Webhook Error:", err);
    return new Response("Error", { status: 500 });
  }
}

export async function GET() {
  return new Response("LINE Webhook is running ‚úÖ", { status: 200 });
}
